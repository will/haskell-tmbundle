<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>hs</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~H</string>
	<key>name</key>
	<string>Haskell</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.haskell</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.haskell</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(`).*(`)</string>
			<key>name</key>
			<string>entity.name.function.infix.haskell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(otherwise|module|where|import|data|type|case|of|let|in|instance|deriving|class|newtype|default|hiding|as)\b</string>
			<key>name</key>
			<string>keyword.other.haskell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![&lt;=&gt;/])=(?![=])</string>
			<key>name</key>
			<string>punctuation.separator.equal-sign.haskell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\|)\|(?!(\||[\(\),_a-zA-Z0-9\s]*&lt;-))</string>
			<key>name</key>
			<string>punctuation.separator.pipe-sign.haskell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\binfix[lr]?\b</string>
			<key>name</key>
			<string>keyword.operator.haskell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(do|if|then|else)\b</string>
			<key>name</key>
			<string>keyword.control.haskell</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.preprocessor.haskell</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(#)\s*\w+</string>
			<key>name</key>
			<string>meta.preprocessor.haskell</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.haskell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.haskell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.haskell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\"'\&amp;])</string>
					<key>name</key>
					<string>constant.character.escape.haskell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\o[0-7]+|\\x[0-9A-Fa-f]+|\\[0-9]+</string>
					<key>name</key>
					<string>constant.character.escape.octal.haskell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\^[A-Z@\[\]\\\^_]</string>
					<key>name</key>
					<string>constant.character.escape.control.haskell</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.haskell</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.haskell</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.haskell</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hexadecimal.haskell</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.control.haskell</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.haskell</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
			(')
			(?:
				[A-Za-z0-9]								# Basic Char
			  | [\ !#$%\&amp;\*\+\.\/&lt;=&gt;\?\@\\\^\|_~":]		# Other Chars
			  | (\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE
					|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS
					|US|SP|DEL|[abfnrtv\\\"'\&amp;]))		# Escapes
			  | (\\o[0-7]+)								# Octal Escapes
			  | (\\x[0-9A-Fa-f]+)						# Hexadecimal Escapes
			  | (\^[A-Z@\[\]\\\^_])						# Control Chars
			)
			(')
			</string>
			<key>name</key>
			<string>string.quoted.single.haskell</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*([a-z_][a-zA-Z0-9_]*|\([|!%$+\-.,=&lt;/&gt;]+\))\s*(::)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.haskell</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.double-colon.haskell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>meta.function.type-declaration.haskell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>-&gt;</string>
					<key>name</key>
					<string>punctuation.separator.arrow.haskell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>punctuation.separator.big-arrow.haskell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z][a-zA-Z0-9,()_]*\b</string>
					<key>name</key>
					<string>variable.other.generic-type.haskell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z][a-zA-Z0-9,()_]*\b</string>
					<key>name</key>
					<string>constant.other.haskell</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Z]\w*\b</string>
			<key>name</key>
			<string>constant.other.haskell</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.haskell</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(--).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-dash.haskell</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_comment</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(abs|acos|acosh|all|and|any|appendFile|applyM|asTypeOf|asin|asinh|atan|atan2|atanh|break|catch|ceiling|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|div|divMod|drop|dropWhile|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromEnum|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|head|id|init|interact|ioError|isDenormalized|isIEEE|isInfinite|isNaN|isNegativeZero|iterate|last|lcm|length|lex|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|odd|or|otherwise|pi|pred|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|read|readFile|readIO|readList|readLn|readParen|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showList|showParen|showString|shows|showsPrec|significand|signum|sin|sinh|snd|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|toEnum|toInteger|toRational|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b</string>
			<key>name</key>
			<string>support.function.prelude.haskell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\([|!%$+\-.,=&lt;/&gt;]+\)</string>
			<key>name</key>
			<string>entity.name.function.infix.haskell</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block_comment</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\{-(?!#)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.haskell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>-\}</string>
			<key>name</key>
			<string>comment.block.haskell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Not really sure what to call this. I think ‘{-#’ is a pragma, but disabled inside comments!?!</string>
					<key>match</key>
					<string>\{-#|#-\}</string>
					<key>name</key>
					<string>constant.character.escape.pragma-or-comment-marker.haskell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.haskell</string>
	<key>uuid</key>
	<string>5C034675-1F6D-497E-8073-369D37E2FD7D</string>
</dict>
</plist>
